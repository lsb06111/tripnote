<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" import="java.util.*"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<div class="trip-tag tag-tour" style="padding:7px;">
	<%
		Random tripRnd = new Random();
	%>
	<c:forEach var="attraction" items="${ attList }">
		<%
			int fRecRnd = tripRnd.nextInt(5);
		%>
		<div class="trip-loc-card" onclick="drawMarkerWithXY(${attraction.mapx}, ${attraction.mapy})">
			<div class="trip-loc-top">
				<div class="sl-thumb">
					<img src="${ attraction.firstimage != null ? attraction.firstimage : '/tripnote/resources/assets/img/trip/sampleTourImg.jpg' }" alt="장소 이미지">
				</div>
				
				<button class="sl-add" aria-label="일정에 추가" onclick="insertToTimeline(event, this, '${attraction.contentId}','${attraction.title}', '${attraction.firstimage}', '${courseDTO.id}', '명소', '${attraction.mapx}', '${attraction.mapy}')">+</button>
			</div>
			<!-- 하단: 상세 설명 박스 -->
			<div class="trip-loc-info">
				<div class="sl-cat d-flex justify-content-start">
					<span class="sl-type me-1">명소</span>
					<a href="#" class="sl-name">${ attraction.title }</a>
					<% if(fRecRnd == 1){ %>
						<div class="sl-badge">친구추천</div>
					<% } %>
					<div class="trip-sl-address" style="display:none">${ attraction.addr1 }</div>
				</div>
				<p class="sl-desc">${ attraction.overview }</p>
				<div class="sl-meta">
				</div>
			</div>
		</div>
	</c:forEach>
</div>

<div class="trip-tag tag-restaurant">
<c:forEach var="restaurant" items="${ restaurantList }">
<div class="trip-loc-card" onclick="drawMarkerWithXY(${restaurant.mapx}, ${restaurant.mapy})">
	<div class="trip-loc-top">
		<div class="sl-thumb">
			<img src="${ restaurant.firstimage != null ? restaurant.firstimage : '/tripnote/resources/assets/img/trip/sampleTourImg.jpg' }" alt="장소 이미지">
		</div>
		
		<button class="sl-add" aria-label="일정에 추가" onclick="insertToTimeline(event, this, '${restaurant.contentId}','${restaurant.title}', '${restaurant.firstimage}', '${courseDTO.id}', '음식점', '${restaurant.mapx}', '${restaurant.mapy}')">+</button>
	</div>
	<!-- 하단: 상세 설명 박스 -->
	<div class="trip-loc-info">
		<div class="sl-cat d-flex justify-content-start">
			<span class="sl-type me-1">음식점</span>
			<a href="#" class="sl-name">${ restaurant.title }</a>
			<div class="trip-sl-address" style="display:none">${ restaurant.addr1 }</div>
		</div>
		<p class="sl-desc">${ restaurant.overview }</p>
		<div class="sl-meta">
		</div>
	</div>
</div>
</c:forEach>
</div>

<div class="trip-tag tag-hotel">
<c:forEach var="hotel" items="${ hotelList }">
<div class="trip-loc-card" onclick="drawMarkerWithXY(${hotel.mapx}, ${hotel.mapy})">
	<div class="trip-loc-top">
		<div class="sl-thumb">
			<img src="${ hotel.firstimage != null ? hotel.firstimage : '/tripnote/resources/assets/img/trip/sampleTourImg.jpg' }" alt="장소 이미지">
		</div>
		
		<button class="sl-add" aria-label="일정에 추가" onclick="insertToTimeline(event, this, '${hotel.contentId}','${hotel.title}', '${hotel.firstimage}', '${courseDTO.id}', '숙소', '${hotel.mapx}', '${hotel.mapy}')">+</button>
	</div>
	<!-- 하단: 상세 설명 박스 -->
	<div class="trip-loc-info">
		<div class="sl-cat d-flex justify-content-start">
			<span class="sl-type me-1">숙소</span>
			<a href="#" class="sl-name">${ hotel.title }</a>
			<div class="trip-sl-address" style="display:none">${ hotel.addr1 }</div>
		</div>
		<p class="sl-desc">${ hotel.overview }</p>
		<div class="sl-meta">
		</div>
	</div>
</div>
</c:forEach>
</div>

<script>
let socket;

window.onload = function(){
	
	const courseId = document.getElementById('course-id-for-ws').value;

    // --- WebSocket Connection Logic (NEW) ---
    if (courseId) {
        // Construct the WebSocket URL dynamically
        console.log(courseId);
        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
        const wsHost = window.location.host;
        //const wsUrl = `${wsProtocol}//${wsHost}/tripnote/ws/trip/${courseId}`;
        const wsUrl = wsProtocol+'//'+wsHost+'/tripnote/ws/trip/'+courseId;
        console.log(wsUrl);
        socket = new WebSocket(wsUrl);

        socket.onopen = function(e) {
            console.log("WebSocket connection established for course: " + courseId);
        };

        socket.onmessage = function(event) {
            console.log("Message from server: ", event.data);
            const data = JSON.parse(event.data);

            // Handle incoming messages based on the 'action'
            if (data.action === 'ADD_LOCATION') {
                const newLoc = data.payload;
                const $target = $('#tab_' + newLoc.tourNth + '.trip-timelineForDay').first();
                const imgSrc = newLoc.imgSrc ? newLoc.imgSrc : "/tripnote/resources/assets/img/trip/sampleTourImg.jpg";
                
                // Use getTimelineEvent to create the HTML and append it
                $target.append(getTimelineEvent(newLoc.tourLocName, newLoc.typeName, imgSrc, newLoc.tourOrder, newLoc.id, '', newLoc.mapx, newLoc.mapy));
                
                // Draw the marker on the map for all users
                drawFixMarker(newLoc.mapx, newLoc.mapy, newLoc.tourLocName);
            }else if(data.action === 'SAVE_NOTE'){
            	const noteData = data.payload;
            	document.querySelector('#content_'+noteData.tourLocId).value = noteData.noteContent;
            }else if(data.action === 'SAVE_DURATION'){
            	const durationData = data.payload;
            	document.querySelector('.duration-time-'+durationData.id).textContent = durationData.startTime + ' ~ ' + durationData.endTime;  
            }else if(data.action === 'DELETE_TOUR'){
            	const deleteData = data.payload;
            	const cardDom = document.querySelector('.tourLocId-'+deleteData.tourLocId);
            	let dmapx = cardDom.dataset.mapx;
            	let dmapy = cardDom.dataset.mapy;
            	const epsilon = 0.000001;

            	for (var i = fixMarkers.length - 1; i >= 0; i--) {
            		var fmarker = fixMarkers[i];
            		var markerPosition = fmarker.getPosition();

            		// ✅ '==' 대신 두 좌표의 차이가 허용 오차보다 작은지 확인
            		if (Math.abs(markerPosition.getLng() - dmapx) < epsilon &&
            			Math.abs(markerPosition.getLat() - dmapy) < epsilon) {

            			// 1. 지도에서 마커를 보이지 않게 합니다.
            			fmarker.setMap(null);

            			// 2. fixMarkers 배열에서 해당 마커를 제거합니다.
            			fixMarkers.splice(i, 1);
            		}
            	}
            	cardDom.remove(); // delete
            	if(transportSelected == 'car')
            		drawRoute(transportSelected);
            	else if(transportSelected != '')
            		drawSimplePolyline('walk');
            	
            	assignLocIndex();
            }else if(data.action === 'UPDATE_TOUR'){
            	const updateData = data.payload;
            	const orderedIds = updateData.orderedIds;
            	const $timelineContainer = $('.trip-timelineForDay:visible').first();

                // 3. ID 배열을 순회하면서 각 ID에 해당하는 카드를 찾아 컨테이너에 순서대로 다시 붙여넣습니다.
                orderedIds.forEach(tourLocId => {
                    // 각 카드에 tourLocId-XXX 클래스가 있어야 쉽게 찾을 수 있습니다. (getTimelineEvent 함수 참고)
                    const $card = $('.tourLocId-'+tourLocId);
                    $timelineContainer.append($card); // .append()는 기존 요소를 이동시킵니다.
                });

                assignLocIndex(false);
            }
            
         };

        socket.onclose = function(event) {
            console.log("WebSocket connection closed.");
        };

        socket.onerror = function(error) {
            console.error("WebSocket Error: ", error);
        };
    }
    
	$.get("/tripnote/trip/getAllTour?courseId=${not empty courseDTO.id ? courseDTO.id : param.courseId}&inviteMode=${param.inviteMode ? param.inviteMode : 'false'}&createdUserId=${param.createdUserId}",
			function(data,status){
				
				if(data != null){
					data.forEach(e => {
						const $target = $('#tab_'+e.tourNth+'.trip-timelineForDay').first();
						let imgSrc = e.imgSrc ? e.imgSrc : "/tripnote/resources/assets/img/trip/sampleTourImg.jpg";
						$target.append(getTimelineEvent(e.tourLocName, e.typeName, imgSrc, e.tourOrder, e.id, e.noteContent != undefined ? e.noteContent : '', e.mapx, e.mapy, e.startTime, e.endTime));
						if(e.tourNth == 1)
							drawFixMarker(e.mapx, e.mapy, e.tourLocName);
					});
					
				}
			})
	
	
}
</script>




