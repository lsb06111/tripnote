<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>
<c:set var="_csrf_header" value="${_csrf.headerName}" />
<c:set var="_csrf_token"  value="${_csrf.token}" />
<meta name="_csrf_header" content="${_csrf_header}"/>
<meta name="_csrf"        content="${_csrf_token}"/>

<form id="registerForm" method="post" action="${pageContext.request.contextPath}/register" class="needs-validation" novalidate>

  <div class="row g-3 mb-2">
    <div class="col-md-6" style="margin-top:0">
      <label for="regName" class="form-label">이름</label>
      <input type="text" class="form-control" id="regName" name="users_name" required placeholder="홍길동">
      <div class="invalid-feedback">이름을 입력해주세요.</div>
    </div>
    <div class="col-md-6" style="margin-top:0">
      <label for="regNickname" class="form-label">닉네임</label>
      <input type="text" class="form-control" id="regNickname" name="nickname" required placeholder="닉네임">
      <div class="invalid-feedback">닉네임을 입력해주세요.</div>
    </div>
   </div>
<div class="mb-2">
  <label for="regUsername" class="form-label">아이디</label>
  <div class="input-group">
    <input type="text" class="form-control" id="regUsername" name="username" required placeholder="triplover">
    <button type="button" id="btnCheck" class="btn text-white"
      style="--bs-btn-bg:#5c99ee; --bs-btn-hover-bg:#447fcc; --bs-btn-border-color:#5c99ee; --bs-btn-hover-border-color:#447fcc;">
      중복체크
    </button>
  </div>
  <div id="msgArea" class="invalid-feedback" style="display:none"></div>

</div>
 <div class="mb-2">
  <label for="regEmail" class="form-label">이메일</label>
  <div class="input-group">
    <input type="email" class="form-control" id="regEmail" name="email" required placeholder="you@example.com">
    <button type="button" class="btn text-white"
      style="--bs-btn-bg:#5c99ee; 
             --bs-btn-hover-bg:#447fcc; 
             --bs-btn-border-color:#5c99ee; 
             --bs-btn-hover-border-color:#447fcc;"
      onclick="showCert();">
      인증요청
    </button>
  </div>
  <div class="invalid-feedback"></div>
</div>

 <div class="mb-2 cert-number" style="display:none;">
  <label for="regCertNumber" class="form-label">인증코드</label>
  <div class="input-group">
    <input type="text" class="form-control" id="regCertNumber" name="certNumber" required placeholder="인증번호">
    <button type="button" class="btn text-white"
      style="--bs-btn-bg:#5c99ee; 
             --bs-btn-hover-bg:#447fcc; 
             --bs-btn-border-color:#5c99ee; 
             --bs-btn-hover-border-color:#447fcc;"
             onclick="verifyCert();">
      인증
    </button>
  </div>
  <div class="invalid-feedback"></div>
</div>
 
<div class="row g-3 mb-2">
    <div class="col-md-6">
      <label for="regPassword" class="form-label">비밀번호</label>
      <input type="password" class="form-control" id="regPassword" name="password" required placeholder="최소 8자">
      <div class="invalid-feedback">비밀번호를 입력해주세요.</div>
    </div>
    <div class="col-md-6">
      <label for="regPassword2" class="form-label">비밀번호 확인</label>
      <input type="password" class="form-control" id="regPassword2" name="passwordConfirm" required placeholder="다시 입력">
      <div class="invalid-feedback">비밀번호가 일치하지 않습니다.</div>
    </div>
</div>
  <div class="form-check mt-3">
    <input class="form-check-input" type="checkbox" value="true" id="terms" required>
    <label class="form-check-label" for="terms">
      <a href="#" class="text-decoration-none">이용약관</a>에 동의합니다.
    </label>
    <div class="invalid-feedback">약관에 동의해주세요.</div>
  </div>

  <button type="submit" class="btn w-100 mt-3 text-white"
          style="--bs-btn-bg:#5c99ee; --bs-btn-hover-bg:#447fcc; --bs-btn-border-color:#5c99ee; --bs-btn-hover-border-color:#447fcc;">
    회원가입
  </button>
</form>

<!-- id 중복체크 -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  // 어디에 두어도 안전
  $(document).on('click', '#btnCheck', function () {
    runUsernameCheck();
  });

  function runUsernameCheck() {
    const $input = $("#regUsername");
    const username = $input.val().trim();
    // 같은 id가 여러 개 있을 가능성도 있으니, 스코프를 좁혀 타겟팅
    const $msg = $input.closest('.mb-2').find('#msgArea');

    console.log('[중복체크] click', { username, msgFound: $msg.length });

    $input.removeClass("is-invalid is-valid");
    $msg.removeClass("invalid-feedback valid-feedback d-block").hide().text("");

    if (!username) {
      $msg.addClass("invalid-feedback d-block")
          .text("아이디를 입력해주세요.")
          .css({display:'block', visibility:'visible'})   // 강제 표시
          .show();
      $input.addClass("is-invalid");
      return;
    }

    $.getJSON("<c:url value='/Usernamecheck'/>", { username })
      .done(function (res) {
        console.log('[중복체크] 응답', res);
        if (res.invalid) {
          $msg.removeClass("valid-feedback")
              .addClass("invalid-feedback d-block")
              .text(res.msg || "이미 사용 중인 아이디입니다.")
              .css({display:'block', visibility:'visible'})
              .show();
          $input.addClass("is-invalid").removeClass("is-valid");
        } else {
          $msg.removeClass("invalid-feedback")
              .addClass("valid-feedback d-block")
              .text(res.msg || "사용 가능한 아이디입니다.")
              .css({display:'block', visibility:'visible'})
              .show();
          $input.addClass("is-valid").removeClass("is-invalid");
        }
      })
      .fail(function (xhr) {
        console.error('[중복체크] 실패', xhr);
        $msg.removeClass("valid-feedback")
            .addClass("invalid-feedback d-block")
            .text("중복체크 실패: " + (xhr.responseText || xhr.status))
            .css({display:'block', visibility:'visible'})
            .show();
        $input.addClass("is-invalid").removeClass("is-valid");
      });
  }
</script>





<!-- 이메일 인증 요청 or 인증 -->
<script>
(function () {
  // CSRF 메타가 없으면 자동으로 빈 헤더 리턴 → 보안 미사용 환경에서도 안전
  function getCsrfHeaders() {
    const h = document.querySelector('meta[name="_csrf_header"]')?.content;
    const t = document.querySelector('meta[name="_csrf"]')?.content;
    return h && t ? { [h]: t } : {};
  }

  // 공통: 입력칸 컨테이너(.mb-2)와 피드백 엘리먼트 얻기
  function groupOf(input) { return input.closest('.mb-2'); }
  function invalidBoxOf(input) { return groupOf(input)?.querySelector('.invalid-feedback'); }

  // 오류 메시지 표시: invalid-feedback + is-invalid
  function showError(input, msg) {
    const box = invalidBoxOf(input);
    if (box) {
      box.textContent = msg || '입력값을 확인해주세요.';
      box.style.display = 'block';
    }
    input.classList.add('is-invalid');
    input.setAttribute('aria-invalid', 'true');
  }
  function clearError(input) {
    const box = invalidBoxOf(input);
    if (box) {
      box.textContent = '';
      box.style.display = 'none';
    }
    input.classList.remove('is-invalid');
    input.removeAttribute('aria-invalid');
  }

  // 성공 메시지(초록): valid-feedback 동적 생성
  function showSuccess(input, msg) {
    const group = groupOf(input);
    if (!group) return;
    let ok = group.querySelector('.valid-feedback');
    if (!ok) {
      ok = document.createElement('div');
      ok.className = 'valid-feedback d-block';
      group.appendChild(ok);
    }
    ok.textContent = msg || '완료되었습니다.';
    input.classList.remove('is-invalid');
    input.classList.add('is-valid');
  }

  // === 인증코드 전송 ===
  window.showCert = async function () {
    const emailEl = document.getElementById('regEmail');
    if (!emailEl) return;
    const email = emailEl.value.trim();

    if (!email) { showError(emailEl, '유효한 이메일을 입력해주세요.'); return; }
    clearError(emailEl);

    try {
      const res = await fetch('<c:url value="/mail/send-cert"/>', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', ...getCsrfHeaders() },
        body: new URLSearchParams({ email })
      });
      const text = await res.text();

      if (!res.ok) {
        // 서버가 에러 문자열을 주면 그대로 출력
        showError(emailEl, text || '인증요청 중 문제가 발생했습니다.');
        return;
      }

      // 성공: 인증번호 입력칸 열고 성공 메시지
      document.querySelector('.cert-number')?.style?.setProperty('display', '');
      document.getElementById('regCertNumber')?.focus();
      showSuccess(emailEl, '인증코드를 전송했습니다. (5분 유효)');
    } catch (e) {
      showError(emailEl, '네트워크 오류: ' + e.message);
    }
  };

  // === 인증코드 검증 ===
  window.verifyCert = async function () {
    const emailEl = document.getElementById('regEmail');
    const codeEl  = document.getElementById('regCertNumber');
    const email = emailEl?.value.trim();
    const code  = codeEl?.value.trim();

    if (!email) { showError(emailEl, '이메일을 먼저 입력하세요.'); return; }
    if (!code)  { showError(codeEl,  '인증번호를 입력하세요.');    return; }

    clearError(codeEl);

    try {
      const res = await fetch('<c:url value="/mail/verify-cert"/>', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', ...getCsrfHeaders() },
        body: new URLSearchParams({ email, code })
      });
      const text = await res.text();

      if (!res.ok) {
        if (text.includes('EXPIRED'))     showError(codeEl,  '만료된 코드입니다. 다시 요청하세요.');
        else if (text.includes('MISMATCH')) showError(codeEl, '인증번호가 일치하지 않습니다.');
        else if (text.includes('NOT_ISSUED')) showError(emailEl, '먼저 인증요청을 해주세요.');
        else showError(codeEl, text || '인증에 실패했습니다.');
        return;
      }

      // 성공 처리
      clearError(codeEl);
      showSuccess(codeEl, '이메일 인증이 완료되었습니다.');
      // 필요 시 숨은 필드에 플래그 저장
      // document.getElementById('emailVerified')?.value = 'true';
    } catch (e) {
      showError(codeEl, '네트워크 오류: ' + e.message);
    }
  };
})();
</script>

<script>
document.addEventListener('DOMContentLoaded', function () {
	var registerStatus = '<c:out value="${registerStatus}" default=""/>';
	
	if (registerStatus === 'success') {
		alert('회원가입이 완료되었습니다.');
	}
	else if (registerStatus === 'fail') {
		alert('회원가입을 실패하셨습니다.');
	}
});
</script>


<script>
document.addEventListener('DOMContentLoaded', function () {
  const form = document.getElementById('registerForm');
  if (!form) return;

  form.addEventListener('submit', function (e) {
    const p1 = form.querySelector('#regPassword');
    const p2 = form.querySelector('#regPassword2');

    // 1) HTML5/Bootstrap 검증: 유효하지 않으면 전송 막고 invalid-feedback 표시
    if (!form.checkValidity()) {
      e.preventDefault(); e.stopPropagation();
    }

    // 2) 비밀번호 일치 추가검증
    if (p1 && p2 && p1.value !== p2.value) {
      e.preventDefault(); e.stopPropagation();
      p2.setCustomValidity('비밀번호가 일치하지 않습니다.');
    } else if (p2) {
      p2.setCustomValidity('');
    }

    // Bootstrap 스타일 표시
    form.classList.add('was-validated');
  }, false);
});
</script>

