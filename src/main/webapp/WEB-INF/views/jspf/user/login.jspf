<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<style>
  /* 로그인 영역에만 적용 */
  .login-component .form-control::placeholder {
    color: #9aa0a6;
    opacity: 1;
  }

  /* 만약 더 강한 규칙이 덮어쓴다면 특이성을 올려 비밀번호 칸을 한 번 더 지정 */
  .login-component input[type="password"]::placeholder {
    color: #9aa0a6 !important;
    opacity: 1;
  }
</style>


<c:set var="cxt" value="${pageContext.request.contextPath}"/>

<form id="loginForm" method="post" action="${pageContext.request.contextPath}/login" class="needs-validation" novalidate>

  <div class="mb-3 login-component">
    <label for="loginUsername" class="form-label">아이디</label>
    <input type="text" class="form-control" id="loginUsername" name="login_username" placeholder="아이디">
    <div class="invalid-feedback">아이디를 입력해주세요.</div>
  </div>

  <div class="mb-3 login-component">
    <label for="loginPassword" class="form-label">비밀번호</label>
    <input type="password" class="form-control" id="loginPassword" name="login_password" placeholder="비밀번호" style="font-weight: 400;">
    <div class="invalid-feedback">비밀번호를 입력해주세요.</div>
  </div>

  <!-- find-* 입력은 처음에 숨기고 disabled로 시작 (검증 제외) -->
  <div class="mb-3 find-component" style="display:none">
    <label for="findUsername" class="form-label">아이디</label>
    <input type="text" class="form-control" id="findUsername" name="find_username" placeholder="아이디" disabled>
    <div class="invalid-feedback">아이디를 입력해주세요.</div>
  </div>

  <div class="mb-3 find-component find-id" style="display:none">
    <label for="findEmail" class="form-label">이메일</label>
    <input type="email" class="form-control" id="findEmail" name="find_email" placeholder="you@example.com" disabled>
    <div id="msgArea" class="invalid-feedback">이메일을 입력해주세요.</div>
  </div>

  <div class="d-flex justify-content-between align-items-center mb-3 login-component">
    <div>
      <!-- return false로 링크 기본 동작 방지 -->
      <a href="" id="btnFindUsername" class="small text-decoration-none" onclick="return findAction('id')">아이디 찾기</a>
      <span>/</span>
      <a href="" class="small text-decoration-none" onclick="return findAction('password')">비밀번호 찾기</a>
    </div>
  </div>

  <button type="submit" class="btn w-100 text-white login-submit-button"
          style="--bs-btn-bg:#5c99ee; --bs-btn-hover-bg:#447fcc; --bs-btn-border-color:#5c99ee; --bs-btn-hover-border-color:#447fcc;">
    로그인
  </button>

</form>

<script>
(() => {
  'use strict';

  const form = document.getElementById('loginForm');

  const findIdDom      = form.querySelector('.find-component.find-id');
  const findPassDomAll = form.querySelectorAll('.find-component');
  const loginDomAll    = form.querySelectorAll('.login-component');
  const submitBtn      = form.querySelector('.login-submit-button');

  const loginInputs = form.querySelectorAll('.login-component input:not([type="checkbox"])');
  const findInputs  = form.querySelectorAll('.find-component input');

  // 현재 모드 추적
  let currentMode = 'login'; // 'login' | 'findId' | 'findPw'

  function toggleInputsRequiredDisabled(nodeList, enable) {
    nodeList.forEach(el => {
      el.disabled = !enable;   
      if (enable) el.setAttribute('required', '');
      else        el.removeAttribute('required');
    });
  }

  function show(el) { el.style.removeProperty('display'); }
  function hide(el) { el.style.display = 'none'; }

  function setLoginMode() {
    currentMode = 'login';
    form.action = '<c:out value="${cxt}"/>/login';
    loginDomAll.forEach(show);
    findPassDomAll.forEach(hide);
    toggleInputsRequiredDisabled(loginInputs, true);
    toggleInputsRequiredDisabled(findInputs,  false);
    submitBtn.textContent = '로그인';
  }

  function setFindIdMode() {
    currentMode = 'findId';
    form.action = '<c:out value="${cxt}"/>/searchusername';
    loginDomAll.forEach(el => el.style.setProperty('display', 'none', 'important'));
    findPassDomAll.forEach(hide);
    show(findIdDom);             
    toggleInputsRequiredDisabled(loginInputs, false);
    toggleInputsRequiredDisabled(findInputs,  true);
    submitBtn.textContent = '아이디 찾기';
  }

  function setFindPasswordMode() {
    currentMode = 'findPw';
    form.action = '<c:out value="${cxt}"/>/searchpassword'; // 비번 찾기 엔드포인트
    loginDomAll.forEach(el => el.style.setProperty('display', 'none', 'important'));
    findPassDomAll.forEach(show); // 아이디/이메일 모두 보이게
    toggleInputsRequiredDisabled(loginInputs, false);
    toggleInputsRequiredDisabled(findInputs,  true);
    submitBtn.textContent = '비밀번호 찾기';
  }

  window.findAction = function (action) {
    if (action === 'id') setFindIdMode();
    else setFindPasswordMode();
    return false;
  };

  setLoginMode();

  // 제출 시 검증
  form.addEventListener('submit', (event) => {
    if (currentMode === 'findId') {
      const email = form.querySelector('#findEmail');
      const msgArea = document.getElementById('msgArea');
      if (!email || !email.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
        if (msgArea) {
          msgArea.textContent = '유효한 이메일을 입력해주세요.';
          msgArea.classList.add('d-block');
        }
      }
    } else if (!form.checkValidity()) {
      event.preventDefault();
      event.stopPropagation();
    }
    form.classList.add('was-validated');
  }, false);
})();
</script>

<!-- 로그인 성공/실패 알림 -->
<script>
document.addEventListener('DOMContentLoaded', function () {
  var loginStatus = '<c:out value="${loginStatus}" default=""/>'; // FlashAttr
  loginStatus = (loginStatus || '').trim();

  if (loginStatus === 'success') {
    alert('로그인이 완료되었습니다.');
  } else if (loginStatus === 'fail') {
    alert('아이디 또는 비밀번호가 불일치합니다.');
  }
});
</script>

<!-- 아이디 찾기 결과 알림 -->
<script>
document.addEventListener('DOMContentLoaded', function () {
  // FlashAttr
  var searchUsername = '<c:out value="${searchUsername}" default=""/>';
  var username = '<c:out value="${username}" default=""/>';
 
  searchUsername = (searchUsername || '').trim();

  if (searchUsername === 'success') {
    alert('아이디를 찾았습니다. -> ' + username);
  } else if (searchUsername === 'fail') {
    alert('이메일 정보가 불일치합니다.');
  }
});
</script>

<!-- 비밀번호 찾기 결과 알림  -->
<script>
document.addEventListener('DOMContentLoaded', function () {
  // FlashAttr / 쿼리스트링 모두 지원
  var pwStatusFA  = '<c:out value="${searchPassword}" default=""/>';
  var pwStatusQP  = '<c:out value="${param.searchPassword}" default=""/>';
  var pwStatus    = (pwStatusFA || pwStatusQP || '').trim();

  // 상태별 알림
  if (pwStatus === 'success') {
    alert('임시 비밀번호를 이메일로 전송했습니다.');
  } else if (pwStatus === 'not_found') {
    alert('아이디/이메일이 일치하지 않습니다.');
  } else if (pwStatus === 'error') {
    alert('처리 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.');
  }
});
</script>
